@page "/Registration"
@using Blog.Shared
<h3>Registration</h3>


    @inject RegistrationInterface AuthService


<PageTitle>Register</PageTitle>

<EditForm Model="_userRegister" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="name">First Name</label>
        <InputText id="name" @bind-Value="_userRegister.FirstName" class="form-control" />
        <ValidationMessage For="@(() => _userRegister.FirstName)" />
    </div>
    <div class="mb-3">
        <label for="surname">Last Name</label>
        <InputText id="surname" @bind-Value="_userRegister.LastName" class="form-control" />
        <ValidationMessage For="@(() => _userRegister.LastName)" />
    </div>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="_userRegister.Email" class="form-control" />
        <ValidationMessage For="@(() => _userRegister.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="_userRegister.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => _userRegister.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="_userRegister.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => _userRegister.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="text-danger">
        <span>@message</span>
    </div>
    @*<ValidationSummary />*@
</EditForm>


@code {
    RegisterDto _userRegister = new RegisterDto("Alex", "Cotruta", "via@via.dk", "Iloveropejump", "Iloveropejump");

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(_userRegister);
        message = result.Message;
        if (!result.Success)
            messageCssClass = "text-danger";
        else
            messageCssClass = "text-success";
    }
}
