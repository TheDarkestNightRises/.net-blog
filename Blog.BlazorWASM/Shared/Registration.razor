@page "/Registration"
@using Blog.Shared
<h3>Registration</h3>


    @inject IUserService _userService


<PageTitle>Register</PageTitle>

<AuthorizeView>
    <NotAuthorized>


        <main class="login-form">
            <div class="cotainer">
                <div class="row justify-content-center">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">Register</div>
                            <div class="card-body">
                                <div class="form-group row">
                                    <label for="firstName" class="col-md-4 col-form-label text-md-right">First Name</label>
                                    <div class="col-md-6">
                                        <input type="firstName" id="firstName" @bind="newUserItem.FirstName" class="form-control" name="firstName" required autofocus>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="lastName" class="col-md-4 col-form-label text-md-right">Last Name</label>
                                    <div class="col-md-6">
                                        <input type="lastName" id="lastName" @bind="newUserItem.LastName" class="form-control" name="lastName" required autofocus>
                                        </div>
                                    </div>
                                <div class="form-group row">
                                    <label for="email_address" class="col-md-4 col-form-label text-md-right">Email</label>
                                    <div class="col-md-6">
                                        <input type="text" id="email_address" @bind="newUserItem.Email" class="form-control" name="username" required autofocus>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="password" class="col-md-4 col-form-label text-md-right">Password</label>
                                    <div class="col-md-6">
                                        <input type="password" id="password" @bind="newUserItem.Password" class="form-control" name="password" required autofocus>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="repeatPassword" class="col-md-4 col-form-label text-md-right">Repeat Password</label>
                                    <div class="col-md-6">
                                        <input type="repeatPassword" id="repeatPassword" @bind="newUserItem.Password" class="form-control" name="repeatPassword" required autofocus>
                                        </div>
                                    </div>

                                <div class="col-md-6 offset-md-4">
                                    <button class="btn btn-primary" @onclick="RegisterAsync">
                                        Create
                                    </button>
                                    <a href="/Login" class="btn btn-link">
                                        You arlready have an account?
                                    </a>
                                </div>
                                <div class="col-md-6 offset-md-4">

                                    @if (!string.IsNullOrEmpty(errorMessage))
                                    {
                                        <span class="help-block" style="color: red">@errorMessage</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>


    </NotAuthorized>
    <Authorized>
    </Authorized>
</AuthorizeView>


@code {
    private User? newUserItem = new User();
    private DateTime today = DateTime.Today;

    private string? errorMessage;

    private async Task RegisterAsync()
    {
        try
        {
            if (newUserItem.FirstName == null || newUserItem.LastName == null || newUserItem.Email == null || newUserItem.Password == null || newUserItem.RepeatPassword == null)
            {
                throw new Exception("All the fields are mandatory");
            }
            else
            {

    /*await _userService.AddElementAsync(newUserItem);
                 NavigationManager.NavigateTo("/",true);*/
            }


        }
        catch (Exception e)
        {
            errorMessage = $"Error: {e.Message}";
        }
    }


}