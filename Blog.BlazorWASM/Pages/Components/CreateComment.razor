@namespace Blog.BlazorWASM.Pages.Components
@using Blog.Shared.Shared
@using Blog.Shared
@using System.Security.Claims
@inject ICommentService CommentService


<div class="card">
    
    <div class="form-group field flex-container">
        <div class="comment-section">Comment section below</div>
        <input class="comment-input" type="text" placeholder="Post a comment" @bind="bodyText" @bind:event="oninput"/>
        <div class="button-row">
            <button @onclick="Create" disabled="@(string.IsNullOrEmpty(bodyText))" class="acceptbtn">
                <img src="icons/comment.png" class="comment_img" alt="comment_icon">
            </button>
        </div>
    </div>

</div>


@code
{
    private string bodyText = "";
    
    [Parameter]
    public Post CurrentPost { get; set; }
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            isLoggedIn = user.Identity != null;
        
            if (!isLoggedIn) return;
        
            userClaims = user.Claims;
            name = user.Identity!.Name!;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
    private async Task Create()
    {
        try
        {
            await CommentService.Create(new CommentCreationDto(1, CurrentPost.Id, bodyText));
            bodyText = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            
        }
    }

}